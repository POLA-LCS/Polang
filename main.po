mac List 1
    method $1 append
    method $1 pop

    mac append 2
        add $1 $2
    end

    mac pop 2
        mac List.pop.negative_index 0
            add index_value len
        end
        
        set len 0
        add len $1
        set index_value $2

        zet expr lt index_value 0
        if expr call List.pop.negative_index
        del expr

        zet List.pop.value index $1 index_value
        sub $1 index_value
        ret List.pop.value
    end

    set $1 []
end

call List lista
call lista.append 5
call lista.append 10
call lista.append 15
call lista.append 20

call List lista2
call lista2.append 50
call lista2.append 60
call lista2.append 70
call lista2.append 80

call lista.pop 0
call lista2.pop -2

out lista
out
out lista2